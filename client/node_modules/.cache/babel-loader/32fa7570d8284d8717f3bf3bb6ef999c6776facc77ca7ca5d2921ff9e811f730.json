{"ast":null,"code":"require(\"dotenv\").config();const mongoose=require(\"mongoose\");const app=require(\"./App\");const PORT=process.env.PORT||5001;mongoose.connect(process.env.MONGODB_URI,{useNewUrlParser:true,useUnifiedTopology:true}).then(()=>{console.log(\"Connected to MongoDB\");app.listen(PORT,()=>console.log(`Server running on port ${PORT}`));}).catch(err=>{console.error(\"MongoDB connection error:\",err);});","map":{"version":3,"names":["require","config","mongoose","app","PORT","process","env","connect","MONGODB_URI","useNewUrlParser","useUnifiedTopology","then","console","log","listen","catch","err","error"],"sources":["C:/Users/USER/Desktop/week-7-devops-deployment-assignment-Nedcarol/client/src/index.js"],"sourcesContent":["require(\"dotenv\").config();\r\nconst mongoose = require(\"mongoose\");\r\nconst app = require(\"./App\");\r\n\r\nconst PORT = process.env.PORT || 5001;\r\n\r\nmongoose.connect(process.env.MONGODB_URI, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n})\r\n.then(() => {\r\n  console.log(\"Connected to MongoDB\");\r\n  app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n})\r\n.catch((err) => {\r\n  console.error(\"MongoDB connection error:\", err);\r\n});\r\n"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC,CAC1B,KAAM,CAAAC,QAAQ,CAAGF,OAAO,CAAC,UAAU,CAAC,CACpC,KAAM,CAAAG,GAAG,CAAGH,OAAO,CAAC,OAAO,CAAC,CAE5B,KAAM,CAAAI,IAAI,CAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAI,IAAI,CAErCF,QAAQ,CAACK,OAAO,CAACF,OAAO,CAACC,GAAG,CAACE,WAAW,CAAE,CACxCC,eAAe,CAAE,IAAI,CACrBC,kBAAkB,CAAE,IACtB,CAAC,CAAC,CACDC,IAAI,CAAC,IAAM,CACVC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCV,GAAG,CAACW,MAAM,CAACV,IAAI,CAAE,IAAMQ,OAAO,CAACC,GAAG,CAAC,0BAA0BT,IAAI,EAAE,CAAC,CAAC,CACvE,CAAC,CAAC,CACDW,KAAK,CAAEC,GAAG,EAAK,CACdJ,OAAO,CAACK,KAAK,CAAC,2BAA2B,CAAED,GAAG,CAAC,CACjD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}